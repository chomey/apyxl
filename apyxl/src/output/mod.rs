use anyhow::Result;

use crate::model::chunk;
pub use buffer::Buffer;
pub use indent::Indented;
pub use stdout::StdOut;

mod buffer;
mod file_set;
mod indent;
mod stdout;

/// An [Output] translates data generated by an apyxl [Generator] to some output format.
pub trait Output {
    /// Start a new chunk. This should be used to acquire new resources for writing the chunk
    /// data such as opening a file. Always pair with a call to `end_chunk`.
    fn start_chunk(&mut self, chunk: &chunk::Chunk);

    /// Complete the current chunk. This should handle releasing any resources related to the
    /// current chunk such as open files.
    fn end_chunk(&mut self, chunk: &chunk::Chunk);

    fn write_str(&mut self, data: &str) -> Result<()>;
    fn write(&mut self, data: char) -> Result<()>;
    fn newline(&mut self) -> Result<()>;
}
